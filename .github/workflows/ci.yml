name: CI

on:
  push:
  pull_request:

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install yamllint
        run: pip install yamllint

      - name: Run yamllint
        run: yamllint .

  rust-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly-2024-01-01
          components: rustfmt, clippy

      - name: Check formatting
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --workspace  --exclude ui_wasabi -- -D warnings

      - name: Run tests
        run: cargo test --workspace --exclude ui_wasabi

  rust-coverage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt, clippy

      - name: Install Tarpaulin
        run: cargo install cargo-tarpaulin --locked

      # Tarpaulinの出力を tee でファイルにも保存
      - name: Run Tarpaulin
        run: |
          cargo tarpaulin \
            --workspace \
            --exclude ui_wasabi \
            --out Xml \
            --out Html \
            | tee tarpaulin_output.txt

      # 標準出力から「coverage,」を含む行を抜き出しファイル保存
      - name: Extract coverage summary
        run: |
          grep 'coverage,' tarpaulin_output.txt > coverage_summary.txt \
            || echo "No coverage info found" > coverage_summary.txt

      # Pull Request 上のみコメントを投稿
      - name: Post coverage comment
        if: ${{ github.event_name == 'pull_request' }}
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const coverageSummary = fs
              .readFileSync('coverage_summary.txt', 'utf8')
              .trim();

            if (coverageSummary === "No coverage info found") {
              console.log("No coverage info found. Skip commenting.");
              return;
            }

            // Pull Requestにコメントを投稿
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body:
                "**Tarpaulin Coverage Report**\n" +
                "```\n" +
                coverageSummary +
                "\n```"
            });

  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ github.repository }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            type=ref,event=pr

      - name: Build and cache Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
